[{"C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\index.js":"1","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\App.js":"2","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\reportWebVitals.js":"3","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\ApiCalls\\apiCalls.js":"4","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\BuildShoppingListComponent\\BuildShoppingListComponent.js":"5","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\ButtonComponent\\ButtonComponent.js":"6","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\LoginComponent\\LoginComponent.js":"7","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\MenuListComponent\\MenuListComponent.js":"8","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\NavigationComponents\\MenuComponent.js":"9","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\NavigationComponents\\AppBarComponent.js":"10","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\IngredientsComponent\\IngredientsComponent.js":"11","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\IngredientsComponent\\IngredientListComponent.js":"12","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\IngredientsComponent\\IngredientModal.js":"13","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\GenericComponents\\SwitchComponent.js":"14","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\GenericComponents\\AddButtonComponent.js":"15","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\GenericComponents\\InputFieldComponent.js":"16","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\GenericComponents\\DropDownComponent.js":"17","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\GenericComponents\\AlertComponent.js":"18","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\GenericComponents\\SnackbarAlertComponent.js":"19","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\GenericComponents\\SearchFieldComponent.js":"20","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\IngredientsComponent\\IngredientListComponent2.js":"21","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\GenericComponents\\ConfirmationModal.js":"22","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\UtilityFunctions\\utility.js":"23"},{"size":500,"mtime":1612145062194,"results":"24","hashOfConfig":"25"},{"size":3068,"mtime":1613850717695,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"25"},{"size":2503,"mtime":1613678330804,"results":"28","hashOfConfig":"25"},{"size":1853,"mtime":1613722834146,"results":"29","hashOfConfig":"25"},{"size":530,"mtime":1612377091770,"results":"30","hashOfConfig":"25"},{"size":4134,"mtime":1613849787043,"results":"31","hashOfConfig":"25"},{"size":1317,"mtime":1611045942074,"results":"32","hashOfConfig":"25"},{"size":2441,"mtime":1613246287422,"results":"33","hashOfConfig":"25"},{"size":1289,"mtime":1612809960980,"results":"34","hashOfConfig":"25"},{"size":8422,"mtime":1613851325812,"results":"35","hashOfConfig":"25"},{"size":3789,"mtime":1613249224486,"results":"36","hashOfConfig":"25"},{"size":5578,"mtime":1613505329230,"results":"37","hashOfConfig":"25"},{"size":1096,"mtime":1613196230368,"results":"38","hashOfConfig":"25"},{"size":793,"mtime":1612504452203,"results":"39","hashOfConfig":"25"},{"size":653,"mtime":1613199875562,"results":"40","hashOfConfig":"25"},{"size":1561,"mtime":1613200580161,"results":"41","hashOfConfig":"25"},{"size":1228,"mtime":1612638585005,"results":"42","hashOfConfig":"25"},{"size":1137,"mtime":1613331468582,"results":"43","hashOfConfig":"25"},{"size":1163,"mtime":1613174685578,"results":"44","hashOfConfig":"25"},{"size":4950,"mtime":1613330991806,"results":"45","hashOfConfig":"25"},{"size":1063,"mtime":1613349180537,"results":"46","hashOfConfig":"25"},{"size":173,"mtime":1613851754023,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"rda67h",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\index.js",[],["104","105"],"C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\App.js",[],"C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\reportWebVitals.js",[],"C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\ApiCalls\\apiCalls.js",[],"C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\BuildShoppingListComponent\\BuildShoppingListComponent.js",[],"C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\ButtonComponent\\ButtonComponent.js",[],"C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\LoginComponent\\LoginComponent.js",["106"],"C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\MenuListComponent\\MenuListComponent.js",[],"C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\NavigationComponents\\MenuComponent.js",["107"],"import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Button } from '@material-ui/core';\r\nimport LocalDiningIcon from '@material-ui/icons/LocalDining';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport './MenuComponent.scss';\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n});\r\n\r\nexport default function TemporaryDrawer(props) {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    left: true,\r\n  });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event.type === 'keydown' &&\r\n      (event.key === 'Tab' || event.key === 'Shift')\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (state['left']) {\r\n      setState({ left: false });\r\n    } else {\r\n      setState({ left: true });\r\n    }\r\n  }, [props.open]);\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        <Link className=\"menu-link\" to=\"/ingredients\">\r\n          <ListItem button key={'1'}>\r\n            <ListItemIcon></ListItemIcon>\r\n            <ListItemText primary={'Ingredients'} />\r\n          </ListItem>\r\n        </Link>\r\n      </List>\r\n      <Link className=\"menu-link\" to=\"/buildlist\">\r\n        <ListItem button key={'2'}>\r\n          <ListItemIcon></ListItemIcon>\r\n          <ListItemText primary={'Build Shopping List'} />\r\n        </ListItem>\r\n      </Link>\r\n      <Divider />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Drawer\r\n        anchor={'left'}\r\n        open={state['left']}\r\n        onClose={toggleDrawer('left', false)}\r\n      >\r\n        <Button onClick={toggleDrawer('left', false)}>\r\n          <LocalDiningIcon fontSize=\"large\" />\r\n        </Button>\r\n        {list('left')}\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\NavigationComponents\\AppBarComponent.js",[],"C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\IngredientsComponent\\IngredientsComponent.js",["108","109","110"],"C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\IngredientsComponent\\IngredientListComponent.js",["111","112"],"C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\IngredientsComponent\\IngredientModal.js",["113","114"],"import React, { useState, useEffect } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// Import generic components\r\nimport InputFieldComponent from '../GenericComponents/InputFieldComponent';\r\nimport DropDownComponent from '../GenericComponents/DropDownComponent';\r\nimport SwitchComponent from '../GenericComponents/SwitchComponent';\r\nimport ConfirmationModal from '../GenericComponents/ConfirmationModal';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    width: '280px',\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  middle: {\r\n    height: '200px',\r\n  },\r\n  switch: {\r\n    paddingTop: '20px',\r\n  },\r\n}));\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function CustomizedDialogs(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [currentIngredient, setCurrentIngredient] = useState('');\r\n  const [active, setActive] = useState(props.data.include);\r\n  const [currentType, setCurrentType] = useState('');\r\n  const [currentID, setCurrentID] = useState('');\r\n  const [confirmOpen, setConfirmOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (props.open) {\r\n      setOpen(true);\r\n    } else setOpen(false);\r\n  }, [props.open]);\r\n\r\n  useEffect(() => {\r\n    setCurrentIngredient(props.data.ingredient);\r\n    setActive(props.data.include);\r\n    setCurrentType(props.data.type);\r\n    setCurrentID(props.data.id);\r\n  }, [props.data]);\r\n\r\n  useEffect(() => {\r\n    props.getCurrentIngredient(currentIngredient);\r\n    props.getCurrentType(currentType);\r\n    props.getCurrentID(currentID);\r\n  }, [currentIngredient, currentType, currentID]);\r\n\r\n  const deleteConfirmHandler = () => {};\r\n\r\n  return (\r\n    <div>\r\n      <Dialog aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <Box className={classes.modal}>\r\n          <DialogTitle align=\"center\" id=\"customized-dialog-title\">\r\n            {props.title}\r\n          </DialogTitle>\r\n          <DialogContent dividers>\r\n            <Box\r\n              className={classes.middle}\r\n              display=\"flex\"\r\n              flexDirection=\"column\"\r\n              align=\"center\"\r\n            >\r\n              <InputFieldComponent\r\n                label={'Ingredient Name'}\r\n                defaultValue={currentIngredient}\r\n                onChange={props.ingredient}\r\n              />\r\n\r\n              <DropDownComponent\r\n                list={props.dropDown}\r\n                dropDownValue={props.dropDownValue}\r\n                value={props.data.type}\r\n              />\r\n              <Box className={classes.switch}>\r\n                <SwitchComponent\r\n                  active={active}\r\n                  switchStateHandler={props.switchStateHandler}\r\n                />\r\n              </Box>\r\n            </Box>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              label=\"Save\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              onClick={props.onClick}\r\n            >\r\n              Save\r\n            </Button>\r\n            {props.isEditModal && (\r\n              <Button\r\n                label=\"Delete\"\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.button}\r\n                onClick={() => {\r\n                  setConfirmOpen(true);\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n            <Button\r\n              label=\"Cancel\"\r\n              variant=\"contained\"\r\n              color=\"default\"\r\n              className={classes.button}\r\n              onClick={props.close}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </Box>\r\n      </Dialog>\r\n      {confirmOpen && (\r\n        <ConfirmationModal\r\n          open={confirmOpen}\r\n          cancel={() => {\r\n            setConfirmOpen(false);\r\n          }}\r\n          confirm={props.delete}\r\n          message=\"Are you sure you want to delete this ingredient?\"\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\GenericComponents\\SwitchComponent.js",["115"],"import React, { useEffect } from 'react';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nexport default function FormControlLabelPosition(props) {\r\n  const [switchOn, setSwitchOn] = React.useState(props.active);\r\n\r\n  useEffect(() => {\r\n    setSwitchOn(props.active);\r\n  }, [props.active]);\r\n\r\n  useEffect(() => {\r\n    props.switchStateHandler(switchOn);\r\n  }, [switchOn]);\r\n\r\n  const handleChange = () => {\r\n    if (switchOn) {\r\n      setSwitchOn(false);\r\n    } else {\r\n      setSwitchOn(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <FormGroup aria-label=\"position\" row>\r\n        <FormControlLabel\r\n          value=\"start\"\r\n          checked={switchOn}\r\n          onChange={handleChange}\r\n          control={<Switch color=\"primary\" />}\r\n          label=\"Include in shopping list\"\r\n          labelPlacement=\"start\"\r\n        />\r\n      </FormGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\GenericComponents\\AddButtonComponent.js",["116","117","118"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport NavigationIcon from '@material-ui/icons/Navigation';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function FloatingActionButtons(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Fab color=\"primary\" aria-label=\"add\" onClick={props.onClick}>\r\n        <AddIcon />\r\n      </Fab>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\GenericComponents\\InputFieldComponent.js",["119"],"import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '220px',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function BasicTextFields(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n      <TextField\r\n        id=\"standard-basic\"\r\n        label={props.label}\r\n        onChange={props.onChange}\r\n        defaultValue={props.defaultValue}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\GenericComponents\\DropDownComponent.js",["120"],"import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 220,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  label: {\r\n    textAlign: 'left',\r\n  },\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n  const typesArray = props.list;\r\n  const classes = useStyles();\r\n  const [type, setType] = React.useState(props.value);\r\n\r\n  const handleChange = (event) => {\r\n    setType(event.target.value);\r\n    props.dropDownValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\r\n        <Select\r\n          className={classes.label}\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={type}\r\n          onChange={handleChange}\r\n        >\r\n          {typesArray.map((item) => {\r\n            const ingredientType = item.type;\r\n            const ingredientID = item.id;\r\n            return (\r\n              <MenuItem key={ingredientID} value={ingredientType}>\r\n                {ingredientType}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\GenericComponents\\AlertComponent.js",[],"C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\GenericComponents\\SnackbarAlertComponent.js",[],"C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\GenericComponents\\SearchFieldComponent.js",["121","122","123","124"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  field: {\r\n    width: '180px',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function InputWithIcon(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.margin}>\r\n      <Grid container spacing={1} alignItems=\"flex-end\">\r\n        <Grid item>\r\n          <SearchIcon />\r\n        </Grid>\r\n        <Grid item>\r\n          <TextField\r\n            className={classes.field}\r\n            id=\"input-with-icon-grid\"\r\n            label={props.label}\r\n            onChange={props.onChange}\r\n            defaultValue={props.defaultValue}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\IngredientsComponent\\IngredientListComponent2.js",["125"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport CheckRoundedIcon from '@material-ui/icons/CheckRounded';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\n\r\nconst columns = [\r\n  { id: 'ingredient', label: 'Ingredient', minWidth: 120 },\r\n  { id: 'type', label: 'Type', minWidth: 80 },\r\n  {\r\n    id: 'include',\r\n    label: 'Include',\r\n    minWidth: 30,\r\n    maxWidth: 60,\r\n    align: 'center',\r\n    format: (value) => value.toString(),\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n    margin: 'auto',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\nexport default function StickyHeadTable(props) {\r\n  const classes = useStyles();\r\n  const [rows, setRows] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [sortObject, setSortObject] = useState({\r\n    order: 'desc',\r\n    column: 'ingredient',\r\n  });\r\n  const [rowsPerPage, setRowsPerPage] = useState();\r\n\r\n  useEffect(() => {\r\n    setRowsPerPage(props.ingredients.length);\r\n    setRows(props.ingredients);\r\n  }, [props.ingredients]);\r\n\r\n  const sortObjArray = (array, propertyToSortOn, desc, isString) => {\r\n    return [...array].sort(function (a, b) {\r\n      let x;\r\n      let y;\r\n      if (isString) {\r\n        x = a[propertyToSortOn].toLowerCase();\r\n        y = b[propertyToSortOn].toLowerCase();\r\n      } else {\r\n        x = a[propertyToSortOn];\r\n        y = b[propertyToSortOn];\r\n      }\r\n\r\n      if (desc) {\r\n        if (x < y) {\r\n          return -1;\r\n        }\r\n        if (x > y) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      } else {\r\n        if (x > y) {\r\n          return -1;\r\n        }\r\n        if (x < y) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      }\r\n    });\r\n  };\r\n\r\n  const onClickHandler = (row) => {\r\n    props.rowClick(row);\r\n  };\r\n\r\n  const sortColumns = (column) => {\r\n    let isString = true;\r\n    if (column === 'include') isString = false;\r\n    if (sortObject.order === 'asc') {\r\n      const sortedArray = sortObjArray(rows, column, true, isString);\r\n      setRows(sortedArray);\r\n      setSortObject({ order: 'desc', column: column });\r\n    } else {\r\n      const sortedArray = sortObjArray(rows, column, false, isString);\r\n      setRows(sortedArray);\r\n      setSortObject({ order: 'asc', column });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  <TableSortLabel\r\n                    active={column.id === sortObject.column ? true : false}\r\n                    direction={sortObject.order}\r\n                    onClick={() => sortColumns(column.id)}\r\n                  >\r\n                    {column.label}\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row) => {\r\n                return (\r\n                  <TableRow\r\n                    onClick={() => onClickHandler(row)}\r\n                    hover\r\n                    role=\"checkbox\"\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                  >\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.format && typeof value === 'boolean' ? (\r\n                            value === true ? (\r\n                              <CheckRoundedIcon style={{ color: '#33cc00' }} />\r\n                            ) : (\r\n                              <ClearRoundedIcon style={{ color: 'red' }} />\r\n                            )\r\n                          ) : (\r\n                            value\r\n                          )}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n  );\r\n}\r\n","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\GenericComponents\\ConfirmationModal.js",["126"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function AlertDialog(props) {\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.open}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {props.message}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.cancel} color=\"primary\">\r\n            No\r\n          </Button>\r\n          <Button onClick={props.confirm} color=\"primary\" autoFocus>\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\UtilityFunctions\\utility.js",[],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":2,"column":8,"nodeType":"133","messageId":"134","endLine":2,"endColumn":14},{"ruleId":"135","severity":1,"message":"136","line":48,"column":6,"nodeType":"137","endLine":48,"endColumn":18,"suggestions":"138"},{"ruleId":"131","severity":1,"message":"139","line":7,"column":8,"nodeType":"133","messageId":"134","endLine":7,"endColumn":27},{"ruleId":"131","severity":1,"message":"140","line":10,"column":8,"nodeType":"133","messageId":"134","endLine":10,"endColumn":22},{"ruleId":"135","severity":1,"message":"141","line":55,"column":6,"nodeType":"137","endLine":55,"endColumn":8,"suggestions":"142"},{"ruleId":"131","severity":1,"message":"143","line":46,"column":9,"nodeType":"133","messageId":"134","endLine":46,"endColumn":25},{"ruleId":"131","severity":1,"message":"144","line":50,"column":9,"nodeType":"133","messageId":"134","endLine":50,"endColumn":32},{"ruleId":"135","severity":1,"message":"145","line":103,"column":6,"nodeType":"137","endLine":103,"endColumn":49,"suggestions":"146"},{"ruleId":"131","severity":1,"message":"147","line":105,"column":9,"nodeType":"133","messageId":"134","endLine":105,"endColumn":29},{"ruleId":"135","severity":1,"message":"145","line":16,"column":6,"nodeType":"137","endLine":16,"endColumn":16,"suggestions":"148"},{"ruleId":"131","severity":1,"message":"149","line":5,"column":8,"nodeType":"133","messageId":"134","endLine":5,"endColumn":16},{"ruleId":"131","severity":1,"message":"150","line":6,"column":8,"nodeType":"133","messageId":"134","endLine":6,"endColumn":20},{"ruleId":"131","severity":1,"message":"151","line":7,"column":8,"nodeType":"133","messageId":"134","endLine":7,"endColumn":22},{"ruleId":"131","severity":1,"message":"152","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":26},{"ruleId":"131","severity":1,"message":"152","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":26},{"ruleId":"131","severity":1,"message":"153","line":3,"column":8,"nodeType":"133","messageId":"134","endLine":3,"endColumn":13},{"ruleId":"131","severity":1,"message":"154","line":4,"column":8,"nodeType":"133","messageId":"134","endLine":4,"endColumn":18},{"ruleId":"131","severity":1,"message":"155","line":5,"column":8,"nodeType":"133","messageId":"134","endLine":5,"endColumn":22},{"ruleId":"131","severity":1,"message":"156","line":6,"column":8,"nodeType":"133","messageId":"134","endLine":6,"endColumn":19},{"ruleId":"131","severity":1,"message":"157","line":40,"column":16,"nodeType":"133","messageId":"134","endLine":40,"endColumn":23},{"ruleId":"131","severity":1,"message":"158","line":7,"column":8,"nodeType":"133","messageId":"134","endLine":7,"endColumn":19},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"no-unused-vars","'Avatar' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.","ArrayExpression",["161"],"'InputFieldComponent' is defined but never used.","'AlertComponent' is defined but never used.","React Hook useEffect has missing dependencies: 'getIngredientList' and 'props.token'. Either include them or remove the dependency array.",["162"],"'handleChangePage' is assigned a value but never used.","'handleChangeRowsPerPage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["163"],"'deleteConfirmHandler' is assigned a value but never used.",["164"],"'EditIcon' is defined but never used.","'FavoriteIcon' is defined but never used.","'NavigationIcon' is defined but never used.","'useEffect' is defined but never used.","'Input' is defined but never used.","'InputLabel' is defined but never used.","'InputAdornment' is defined but never used.","'FormControl' is defined but never used.","'setPage' is assigned a value but never used.","'DialogTitle' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},"Update the dependencies array to be: [props.open, state]",{"range":"173","text":"174"},"Update the dependencies array to be: [getIngredientList, props.token]",{"range":"175","text":"176"},"Update the dependencies array to be: [currentIngredient, currentType, currentID, props]",{"range":"177","text":"178"},"Update the dependencies array to be: [props, switchOn]",{"range":"179","text":"180"},[1277,1289],"[props.open, state]",[2005,2007],"[getIngredientList, props.token]",[3079,3122],"[currentIngredient, currentType, currentID, props]",[544,554],"[props, switchOn]"]