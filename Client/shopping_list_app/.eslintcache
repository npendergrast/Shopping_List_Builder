[{"C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\index.js":"1","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\App.js":"2","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\reportWebVitals.js":"3","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\ApiCalls\\apiCalls.js":"4","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\BuildShoppingListComponent\\BuildShoppingListComponent.js":"5","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\ButtonComponent\\ButtonComponent.js":"6","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\LoginComponent\\LoginComponent.js":"7","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\MenuListComponent\\MenuListComponent.js":"8","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\NavigationComponents\\MenuComponent.js":"9","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\NavigationComponents\\AppBarComponent.js":"10","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\IngredientsComponent\\IngredientsComponent.js":"11","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\IngredientsComponent\\IngredientListComponent.js":"12","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\IngredientsComponent\\IngredientModal.js":"13","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\GenericComponents\\SwitchComponent.js":"14","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\GenericComponents\\AddButtonComponent.js":"15","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\GenericComponents\\InputFieldComponent.js":"16","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\GenericComponents\\DropDownComponent.js":"17","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\GenericComponents\\AlertComponent.js":"18","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\GenericComponents\\SnackbarAlertComponent.js":"19","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\GenericComponents\\SearchFieldComponent.js":"20"},{"size":500,"mtime":1612145062194,"results":"21","hashOfConfig":"22"},{"size":2758,"mtime":1613184520719,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":2503,"mtime":1613025612014,"results":"25","hashOfConfig":"22"},{"size":1853,"mtime":1611958428258,"results":"26","hashOfConfig":"22"},{"size":530,"mtime":1612377091770,"results":"27","hashOfConfig":"22"},{"size":4066,"mtime":1613182469260,"results":"28","hashOfConfig":"22"},{"size":1317,"mtime":1611045942074,"results":"29","hashOfConfig":"22"},{"size":2458,"mtime":1613184040758,"results":"30","hashOfConfig":"22"},{"size":1289,"mtime":1612809960980,"results":"31","hashOfConfig":"22"},{"size":8239,"mtime":1613181058976,"results":"32","hashOfConfig":"22"},{"size":3855,"mtime":1613175556500,"results":"33","hashOfConfig":"22"},{"size":3128,"mtime":1613070150913,"results":"34","hashOfConfig":"22"},{"size":1088,"mtime":1612559197633,"results":"35","hashOfConfig":"22"},{"size":793,"mtime":1612504452203,"results":"36","hashOfConfig":"22"},{"size":652,"mtime":1612562795104,"results":"37","hashOfConfig":"22"},{"size":1482,"mtime":1612558488939,"results":"38","hashOfConfig":"22"},{"size":1228,"mtime":1612638585005,"results":"39","hashOfConfig":"22"},{"size":1098,"mtime":1613173274308,"results":"40","hashOfConfig":"22"},{"size":1163,"mtime":1613174685578,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"rda67h",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"44"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"44"},"C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\index.js",[],["93","94"],"C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\App.js",["95"],"C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\reportWebVitals.js",[],"C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\ApiCalls\\apiCalls.js",[],"C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\BuildShoppingListComponent\\BuildShoppingListComponent.js",[],"C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\ButtonComponent\\ButtonComponent.js",[],"C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\LoginComponent\\LoginComponent.js",["96"],"import React, { useEffect, useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport LocalDiningIcon from '@material-ui/icons/LocalDining';\r\n\r\nimport { userLogin } from '../ApiCalls/apiCalls';\r\nimport SnackbarAlertComponent from '../GenericComponents/SnackbarAlertComponent';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  icon: {\r\n    marginBottom: '30px',\r\n    transform: 'scale(3)',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn(props) {\r\n  const classes = useStyles();\r\n  const [buttonDisabled, setButtonDisabled] = useState(true);\r\n  const [userName, setUserName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [alertState, setAlertState] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (userName !== '' && password !== '') {\r\n      setButtonDisabled(false);\r\n    } else {\r\n      setButtonDisabled(true);\r\n    }\r\n  }, [userName, password]);\r\n\r\n  const onClickHandler = (event) => {\r\n    event.preventDefault();\r\n    const credentials = { userName: userName, password: password };\r\n    userLogin(credentials).then((response) => {\r\n      if (response.success) {\r\n        const { token, userID } = response;\r\n        props.login(token, userID);\r\n      } else {\r\n        setAlertState({\r\n          alert: true,\r\n          type: 'error',\r\n          message: response.message,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setAlertState({ alert: false, type: 'error' });\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <LocalDiningIcon className={classes.icon} />\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            onChange={(e) => setUserName(e.target.value)}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                value=\"remember\"\r\n                checked={props.checked}\r\n                onChange={props.checkHandler}\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            onClick={onClickHandler}\r\n            type=\"submit\"\r\n            disabled={buttonDisabled}\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      <SnackbarAlertComponent\r\n        open={alertState.alert}\r\n        close={handleAlertClose}\r\n        message={alertState.message}\r\n        type={alertState.type}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\MenuListComponent\\MenuListComponent.js",[],"C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\NavigationComponents\\MenuComponent.js",["97"],"C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\NavigationComponents\\AppBarComponent.js",[],"C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\IngredientsComponent\\IngredientsComponent.js",["98","99","100"],"import React, { useState, useEffect } from 'react';\r\nimport { getIngredients, getIngredientTypes } from '../ApiCalls/apiCalls';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n// Import app components\r\nimport IngredientListComponent from './IngredientListComponent';\r\nimport InputFieldComponent from '../GenericComponents/InputFieldComponent';\r\nimport IngredientModal from './IngredientModal';\r\nimport AddButtonComponent from '../GenericComponents/AddButtonComponent';\r\nimport AlertComponent from '../GenericComponents/AlertComponent';\r\nimport SnackbarAlertComponent from '../GenericComponents/SnackbarAlertComponent';\r\nimport SearchFieldComponent from '../GenericComponents/SearchFieldComponent';\r\n\r\nimport {\r\n  addIngredient,\r\n  editIngredient,\r\n  deleteIngredient,\r\n} from '../ApiCalls/apiCalls';\r\n\r\nconst IngredientList = (props) => {\r\n  const [list, setList] = useState([]);\r\n  const [types, setTypes] = useState([]);\r\n  const [filteredList, setFilteredList] = useState([]);\r\n  const [editModalOpen, setEditModalOpen] = useState(false);\r\n  const [addModalOpen, setAddModalOpen] = useState(false);\r\n  const [modalData, setModalData] = useState({});\r\n  const [typeState, setTypeState] = useState();\r\n  const [idState, setIdState] = useState();\r\n  const [includeState, setIncludeState] = useState();\r\n  const [ingredientState, setIngredientState] = useState();\r\n  const [alertState, setAlertState] = useState({});\r\n\r\n  const getIngredientList = () => {\r\n    getIngredients(props.token).then((response) => {\r\n      if (!response.auth) {\r\n        props.cancelToken();\r\n      } else {\r\n        setList(response.data);\r\n        setFilteredList(response.data);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getIngredientList();\r\n    getIngredientTypes(props.token).then((items) => {\r\n      setTypes(items);\r\n    });\r\n  }, []);\r\n\r\n  const onSearchHandler = (e) => {\r\n    const filteredArray = list.filter(\r\n      (item) =>\r\n        item.ingredient\r\n          .toLowerCase()\r\n          .search(e.target.value.toLowerCase().trim()) !== -1\r\n    );\r\n    setFilteredList(filteredArray);\r\n  };\r\n\r\n  const onRowClickHandler = (row) => {\r\n    setModalData(row);\r\n    setEditModalOpen(true);\r\n  };\r\n\r\n  const onCloseHandler = () => {\r\n    setEditModalOpen(false);\r\n    setAddModalOpen(false);\r\n  };\r\n\r\n  const onClickHandler = () => {\r\n    setAddModalOpen(true);\r\n  };\r\n\r\n  const modalDropDownValue = (value) => {\r\n    setTypeState(value);\r\n  };\r\n\r\n  const switchStateHandler = (value) => {\r\n    setIncludeState(value);\r\n  };\r\n\r\n  const currentIngredient = (value) => {\r\n    setIngredientState(value);\r\n  };\r\n\r\n  const currentType = (value) => {\r\n    setTypeState(value);\r\n  };\r\n\r\n  const currentID = (value) => {\r\n    setIdState(value);\r\n  };\r\n\r\n  const ingredientValue = (event) => {\r\n    setIngredientState(event.target.value);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setAlertState({});\r\n  };\r\n\r\n  const deleteHandler = () => {\r\n    const deleteObject = {\r\n      id: idState,\r\n    };\r\n    deleteIngredient(deleteObject).then((response) => {\r\n      if (response.success) {\r\n        setAlertState({\r\n          alert: true,\r\n          type: 'success',\r\n          message: response.message,\r\n        });\r\n        getIngredientList();\r\n        onCloseHandler();\r\n      } else {\r\n        setAlertState({\r\n          alert: true,\r\n          type: 'error',\r\n          message: response.message,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const saveHandler = () => {\r\n    // Check if ingredient or type fields are empty\r\n    if (ingredientState.trim() === '') {\r\n      setAlertState({\r\n        alert: true,\r\n        type: 'error',\r\n        message: 'Please enter an ingredient name',\r\n      });\r\n    } else {\r\n      if (typeState.trim() === '') {\r\n        setAlertState({\r\n          alert: true,\r\n          type: 'error',\r\n          message: 'Please enter a type',\r\n        });\r\n      } else {\r\n        // If there is an id then you are editing existing ingredient\r\n        if (idState !== '') {\r\n          // Check if any fields have been changed and give alert if not\r\n          if (\r\n            modalData.ingredient === ingredientState &&\r\n            modalData.type === typeState &&\r\n            modalData.include === includeState\r\n          ) {\r\n            setAlertState({\r\n              alert: true,\r\n              type: 'error',\r\n              message: 'No fields have changed',\r\n            });\r\n          } else {\r\n            // Send http edit request\r\n            const saveObject = {\r\n              ingredient: ingredientState,\r\n              ingredientType: typeState,\r\n              include: includeState,\r\n              id: idState,\r\n            };\r\n            editIngredient(saveObject, props.token).then((response) => {\r\n              if (!response.auth) {\r\n                props.cancelToken();\r\n              } else {\r\n                if (response.success) {\r\n                  setAlertState({\r\n                    alert: true,\r\n                    type: 'success',\r\n                    message: response.message,\r\n                  });\r\n                  getIngredientList();\r\n                  onCloseHandler();\r\n                } else {\r\n                  setAlertState({\r\n                    alert: true,\r\n                    type: 'error',\r\n                    message: response.message,\r\n                  });\r\n                }\r\n              }\r\n            });\r\n          }\r\n        } else {\r\n          // No id found so you are adding a new ingredient\r\n          const saveObject = {\r\n            ingredient: ingredientState,\r\n            ingredientType: typeState,\r\n            include: includeState,\r\n          };\r\n          addIngredient(saveObject, props.token).then((response) => {\r\n            if (!response.auth) {\r\n              props.cancelToken();\r\n            } else {\r\n              if (response.success) {\r\n                setAlertState({\r\n                  alert: true,\r\n                  type: 'success',\r\n                  message: response.message,\r\n                });\r\n                getIngredientList();\r\n                onCloseHandler();\r\n              } else {\r\n                setAlertState({\r\n                  alert: true,\r\n                  type: 'error',\r\n                  message: response.message,\r\n                });\r\n              }\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box m=\"20px\">\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-start\"\r\n        mt=\"15px\"\r\n        mb=\"15px\"\r\n        ml=\"10px\"\r\n      >\r\n        <SearchFieldComponent onChange={onSearchHandler} label={'Search'} />\r\n        <AddButtonComponent onClick={onClickHandler} />\r\n      </Box>\r\n      <IngredientListComponent\r\n        ingredients={filteredList}\r\n        rowClick={onRowClickHandler}\r\n      />\r\n      {editModalOpen && (\r\n        <IngredientModal\r\n          open={editModalOpen}\r\n          data={modalData}\r\n          ingredient={ingredientValue}\r\n          getCurrentIngredient={currentIngredient}\r\n          getCurrentType={currentType}\r\n          getCurrentID={currentID}\r\n          dropDown={types}\r\n          dropDownValue={modalDropDownValue}\r\n          close={onCloseHandler}\r\n          title=\"Edit Ingredient\"\r\n          switchStateHandler={switchStateHandler}\r\n          onClick={saveHandler}\r\n          isEditModal={true}\r\n          delete={deleteHandler}\r\n        />\r\n      )}\r\n      {addModalOpen && (\r\n        <IngredientModal\r\n          open={addModalOpen}\r\n          data={{ include: true, ingredient: '', type: '', id: '' }}\r\n          ingredient={ingredientValue}\r\n          getCurrentIngredient={currentIngredient}\r\n          getCurrentType={currentType}\r\n          getCurrentID={currentID}\r\n          dropDown={types}\r\n          dropDownValue={modalDropDownValue}\r\n          close={onCloseHandler}\r\n          title=\"Add Ingredient\"\r\n          switchStateHandler={switchStateHandler}\r\n          onClick={saveHandler}\r\n        />\r\n      )}\r\n      {alertState.alert && (\r\n        <SnackbarAlertComponent\r\n          open={alertState.alert}\r\n          close={handleAlertClose}\r\n          message={alertState.message}\r\n          type={alertState.type}\r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default IngredientList;\r\n","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\IngredientsComponent\\IngredientListComponent.js",["101","102","103"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport CheckRoundedIcon from '@material-ui/icons/CheckRounded';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\n\r\nconst columns = [\r\n  { id: 'ingredient', label: 'Ingredient', minWidth: 120 },\r\n  { id: 'type', label: 'Type', minWidth: 80 },\r\n  {\r\n    id: 'include',\r\n    label: 'Include',\r\n    minWidth: 30,\r\n    maxWidth: 60,\r\n    align: 'center',\r\n    format: (value) => value.toString(),\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n    margin: 'auto',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\nexport default function StickyHeadTable(props) {\r\n  const rows = props.ingredients;\r\n  const classes = useStyles();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(20);\r\n\r\n  useEffect(() => {\r\n    setRowsPerPage(props.ingredients.length);\r\n  }, [props.ingredients]);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onClickHandler = (row) => {\r\n    props.rowClick(row);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row) => {\r\n                return (\r\n                  <TableRow\r\n                    onClick={() => onClickHandler(row)}\r\n                    hover\r\n                    role=\"checkbox\"\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                  >\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.format && typeof value === 'boolean' ? (\r\n                            value === true ? (\r\n                              <CheckRoundedIcon style={{ color: '#33cc00' }} />\r\n                            ) : (\r\n                              <ClearRoundedIcon style={{ color: 'red' }} />\r\n                            )\r\n                          ) : (\r\n                            value\r\n                          )}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      {/* <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      /> */}\r\n    </Paper>\r\n  );\r\n}\r\n","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\IngredientsComponent\\IngredientModal.js",["104","105"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport InputFieldComponent from '../GenericComponents/InputFieldComponent';\r\nimport DropDownComponent from '../GenericComponents/DropDownComponent';\r\nimport SwitchComponent from '../GenericComponents/SwitchComponent';\r\nimport ButtonComponent from '../ButtonComponent/ButtonComponent';\r\nimport { Divider, Typography, Card } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nexport default function TransitionsModal(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [currentIngredient, setCurrentIngredient] = useState('');\r\n  const [active, setActive] = useState();\r\n  const [currentType, setCurrentType] = useState('');\r\n  const [currentID, setCurrentID] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (props.open) {\r\n      setOpen(true);\r\n    } else setOpen(false);\r\n  }, [props.open]);\r\n\r\n  useEffect(() => {\r\n    setCurrentIngredient(props.data.ingredient);\r\n    setActive(props.data.include);\r\n    setCurrentType(props.data.type);\r\n    setCurrentID(props.data.id);\r\n  }, [props.data]);\r\n\r\n  useEffect(() => {\r\n    props.getCurrentIngredient(currentIngredient);\r\n    props.getCurrentType(currentType);\r\n    props.getCurrentID(currentID);\r\n  }, [currentIngredient, currentType, currentID]);\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <Typography align=\"center\">{props.title}</Typography>\r\n            <Divider />\r\n            <InputFieldComponent\r\n              label={'Ingredient'}\r\n              defaultValue={currentIngredient}\r\n              onChange={props.ingredient}\r\n            />\r\n            <DropDownComponent\r\n              list={props.dropDown}\r\n              dropDownValue={props.dropDownValue}\r\n              value={props.data.type}\r\n            />\r\n            <SwitchComponent\r\n              active={active}\r\n              switchStateHandler={props.switchStateHandler}\r\n            />\r\n            <ButtonComponent label={'Save'} onClick={props.onClick} />\r\n            <ButtonComponent onClick={props.close} label={'Cancel'} />\r\n            {props.isEditModal && (\r\n              <ButtonComponent label=\"Delete\" onClick={props.delete} />\r\n            )}\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\GenericComponents\\SwitchComponent.js",["106"],"import React, { useEffect } from 'react';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nexport default function FormControlLabelPosition(props) {\r\n  const [switchOn, setSwitchOn] = React.useState(true);\r\n\r\n  useEffect(() => {\r\n    setSwitchOn(props.active);\r\n  }, [props.active]);\r\n\r\n  useEffect(() => {\r\n    props.switchStateHandler(switchOn);\r\n  }, [switchOn]);\r\n\r\n  const handleChange = () => {\r\n    if (switchOn) {\r\n      setSwitchOn(false);\r\n    } else {\r\n      setSwitchOn(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <FormGroup aria-label=\"position\" row>\r\n        <FormControlLabel\r\n          value=\"start\"\r\n          checked={switchOn}\r\n          onChange={handleChange}\r\n          control={<Switch color=\"primary\" />}\r\n          label=\"Include in shopping list\"\r\n          labelPlacement=\"start\"\r\n        />\r\n      </FormGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\GenericComponents\\AddButtonComponent.js",["107","108","109"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport NavigationIcon from '@material-ui/icons/Navigation';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function FloatingActionButtons(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Fab color=\"primary\" aria-label=\"add\" onClick={props.onClick}>\r\n        <AddIcon />\r\n      </Fab>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\GenericComponents\\InputFieldComponent.js",["110"],"import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function BasicTextFields(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n      <TextField\r\n        id=\"standard-basic\"\r\n        label={props.label}\r\n        onChange={props.onChange}\r\n        defaultValue={props.defaultValue}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\GenericComponents\\DropDownComponent.js",["111"],"import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n  const typesArray = props.list;\r\n  const classes = useStyles();\r\n  const [type, setType] = React.useState(props.value);\r\n\r\n  const handleChange = (event) => {\r\n    setType(event.target.value);\r\n    props.dropDownValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={type}\r\n          onChange={handleChange}\r\n        >\r\n          {typesArray.map((item) => {\r\n            const ingredientType = item.type;\r\n            const ingredientID = item.id;\r\n            return (\r\n              <MenuItem key={ingredientID} value={ingredientType}>\r\n                {ingredientType}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\GenericComponents\\AlertComponent.js",[],"C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\GenericComponents\\SnackbarAlertComponent.js",["112","113","114"],"import React, { useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  snack: {\r\n    marginTop: '60px',\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSnackbars(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar\r\n        className={classes.snack}\r\n        open={props.open}\r\n        TransitionProps={{\r\n          exit: false,\r\n          timeout: 200,\r\n        }}\r\n        onClose={props.close}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n      >\r\n        <Alert severity={props.type}>{props.message}</Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\npend\\Desktop\\Web Projects\\ShoppingListBuilder\\Client\\shopping_list_app\\src\\GenericComponents\\SearchFieldComponent.js",["115","116","117","118"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  field: {\r\n    width: '180px',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function InputWithIcon(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.margin}>\r\n      <Grid container spacing={1} alignItems=\"flex-end\">\r\n        <Grid item>\r\n          <SearchIcon />\r\n        </Grid>\r\n        <Grid item>\r\n          <TextField\r\n            className={classes.field}\r\n            id=\"input-with-icon-grid\"\r\n            label={props.label}\r\n            onChange={props.onChange}\r\n            defaultValue={props.defaultValue}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":7,"column":3,"nodeType":"125","messageId":"126","endLine":7,"endColumn":7},{"ruleId":"123","severity":1,"message":"127","line":2,"column":8,"nodeType":"125","messageId":"126","endLine":2,"endColumn":14},{"ruleId":"128","severity":1,"message":"129","line":48,"column":6,"nodeType":"130","endLine":48,"endColumn":18,"suggestions":"131"},{"ruleId":"123","severity":1,"message":"132","line":7,"column":8,"nodeType":"125","messageId":"126","endLine":7,"endColumn":27},{"ruleId":"123","severity":1,"message":"133","line":10,"column":8,"nodeType":"125","messageId":"126","endLine":10,"endColumn":22},{"ruleId":"128","severity":1,"message":"134","line":49,"column":6,"nodeType":"130","endLine":49,"endColumn":8,"suggestions":"135"},{"ruleId":"123","severity":1,"message":"136","line":9,"column":8,"nodeType":"125","messageId":"126","endLine":9,"endColumn":23},{"ruleId":"123","severity":1,"message":"137","line":47,"column":9,"nodeType":"125","messageId":"126","endLine":47,"endColumn":25},{"ruleId":"123","severity":1,"message":"138","line":51,"column":9,"nodeType":"125","messageId":"126","endLine":51,"endColumn":32},{"ruleId":"123","severity":1,"message":"139","line":10,"column":31,"nodeType":"125","messageId":"126","endLine":10,"endColumn":35},{"ruleId":"128","severity":1,"message":"140","line":51,"column":6,"nodeType":"130","endLine":51,"endColumn":49,"suggestions":"141"},{"ruleId":"128","severity":1,"message":"140","line":16,"column":6,"nodeType":"130","endLine":16,"endColumn":16,"suggestions":"142"},{"ruleId":"123","severity":1,"message":"143","line":5,"column":8,"nodeType":"125","messageId":"126","endLine":5,"endColumn":16},{"ruleId":"123","severity":1,"message":"144","line":6,"column":8,"nodeType":"125","messageId":"126","endLine":6,"endColumn":20},{"ruleId":"123","severity":1,"message":"145","line":7,"column":8,"nodeType":"125","messageId":"126","endLine":7,"endColumn":22},{"ruleId":"123","severity":1,"message":"146","line":1,"column":17,"nodeType":"125","messageId":"126","endLine":1,"endColumn":26},{"ruleId":"123","severity":1,"message":"146","line":1,"column":17,"nodeType":"125","messageId":"126","endLine":1,"endColumn":26},{"ruleId":"123","severity":1,"message":"146","line":1,"column":17,"nodeType":"125","messageId":"126","endLine":1,"endColumn":26},{"ruleId":"123","severity":1,"message":"147","line":2,"column":8,"nodeType":"125","messageId":"126","endLine":2,"endColumn":14},{"ruleId":"123","severity":1,"message":"148","line":6,"column":8,"nodeType":"125","messageId":"126","endLine":6,"endColumn":13},{"ruleId":"123","severity":1,"message":"149","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":13},{"ruleId":"123","severity":1,"message":"150","line":4,"column":8,"nodeType":"125","messageId":"126","endLine":4,"endColumn":18},{"ruleId":"123","severity":1,"message":"151","line":5,"column":8,"nodeType":"125","messageId":"126","endLine":5,"endColumn":22},{"ruleId":"123","severity":1,"message":"152","line":6,"column":8,"nodeType":"125","messageId":"126","endLine":6,"endColumn":19},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Avatar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.","ArrayExpression",["155"],"'InputFieldComponent' is defined but never used.","'AlertComponent' is defined but never used.","React Hook useEffect has missing dependencies: 'getIngredientList' and 'props.token'. Either include them or remove the dependency array.",["156"],"'TablePagination' is defined but never used.","'handleChangePage' is assigned a value but never used.","'handleChangeRowsPerPage' is assigned a value but never used.","'Card' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["157"],["158"],"'EditIcon' is defined but never used.","'FavoriteIcon' is defined but never used.","'NavigationIcon' is defined but never used.","'useEffect' is defined but never used.","'Button' is defined but never used.","'Slide' is defined but never used.","'Input' is defined but never used.","'InputLabel' is defined but never used.","'InputAdornment' is defined but never used.","'FormControl' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},"Update the dependencies array to be: [props.open, state]",{"range":"167","text":"168"},"Update the dependencies array to be: [getIngredientList, props.token]",{"range":"169","text":"170"},"Update the dependencies array to be: [currentIngredient, currentType, currentID, props]",{"range":"171","text":"172"},"Update the dependencies array to be: [props, switchOn]",{"range":"173","text":"174"},[1294,1306],"[props.open, state]",[1822,1824],"[getIngredientList, props.token]",[1746,1789],"[currentIngredient, currentType, currentID, props]",[536,546],"[props, switchOn]"]